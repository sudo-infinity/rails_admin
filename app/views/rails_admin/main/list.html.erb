<%
 @model_config.bind(:view, self)
  params = request.params.except(:action, :controller, :model_name)
  query = params[:query]
  filter = params[:filter]
  sort = params[:sort]
  sort_reverse = params[:sort_reverse]
  properties = @model_config.list.visible_fields
  filters_exist = !properties.select{|property| property.type == :boolean}.empty?
  # columns paginate
  @style, @other, properties = get_column_set(properties)
%>

<style type="text/css">
<% @style.each do |key, value| %>
  <%= ".#{key}Header" %>{
    width: <%= value[:width] %>px;
  }

  <%= ".#{key}Row" %>{
    width: <%= value[:width] %>px;
  }
<% end %>
<% @other.each do |t| %>
  <%= ".#{t}"%>{
    display:none;
  }
<% end %>
</style>
      <div id="contentHeader">
        <h2><%= @page_name %></h2>
        <div id="quickAccess">
          <ul id="quick">
            <li>
             <%= link_to(t("admin.history.name"), rails_admin_show_history_path, :class => "addlink") %>
            </li>
            <li>
             <%= link_to(t("admin.list.add_new"), rails_admin_new_path(:model_name => @abstract_model.to_param), :class => "addlink") %>
            </li>
          </ul>
        </div>
      </div>
<%= render(:partial => 'layouts/rails_admin/flash', :locals => {:flash => flash}) -%>
      <div id="contentMainModules">
        <div class="searchBox">
          <form action="#" action="" method="get">
            <fieldset>
              <input type="text" id="searchBar" name="query" value="<%= query %>"/>
              <input type="submit" id="searchbar_btn" value="<%= t("admin.list.search_btn")%>" />
            </fieldset>
          </form>
        </div>
        <table>
        <tr id="moduleHeader">
          <th class="otherHeader otherHeaderLeft">...</th>
          <% properties.each do |property| %>
          <% property_name = property.name %>
          <% property_pretty_name = property.label %>
          <th class="<%= "#{property.column_css_class}Header" %> <%= sort == property_name.to_s ? "columnSelected" : nil %>">
            <% if property.sortable? %>
            <% sort_location = params.merge(:sort => property_name).reject{|key, value| key.to_sym == :sort_reverse}.merge(sort == property_name.to_s && sort_reverse != "true" ? {:sort_reverse => "true"} : {}) %>
            <%= link_to(property_pretty_name.upcase, sort_location, :ref => sort_location.to_json, :class => "headerSort") %>
            <% if sort == property_name.to_s %>
            <%= link_to sort_arrow_image(sort_reverse), sort_location, :ref => sort_location.to_json, :class => "headerSort" %>
            <% end %>
            <% else %>
            <%= property_pretty_name.upcase %>
            <% end %>
          </th>
          <% end %>
          <th class="otherHeader otherHeaderRight">...</th>
          <th class="actionHeader"><%= t("admin.list.edit_action").upcase%></th>
          <th class="actionHeader"><%= t("admin.list.delete_action").upcase%></th>
        </tr>

        <% @objects.each_with_index do |object, index| %>
        <% @model_config.bind(:object, object) %>
        <tr class="infoRow<%= index % 2 == 0 ? nil : " greyRow" %>">
          <% other_left = params.reject{|key, value| key == "set"}.merge(:set => params[:set].to_i - 1) %>
          <td class="otherRow otherLeft"><%= link_to("...", other_left, :ref => other_left.to_json) %></td>
          <% properties.each do |property| %>
          <td class="<%= "#{property.column_css_class}Row" %>"><%= [:text, :string].include?(property.type) ? property.formatted_value[0..40] : property.formatted_value %></td>
          <% end %>
          <% other_right = params.reject{|key, value| key == "set"}.merge(:set => params[:set].to_i + 1) %>
          <td class="otherRow otherRight"><%= link_to("...", other_right, :ref => other_right.to_json)%></td>
          <td class="actionRow editAction"><%= link_to(t("admin.list.edit_action"), rails_admin_edit_path(:model_name => @abstract_model.to_param, :id => object.id)) %></td>
          <td class="actionRow deleteAction"><%= link_to(t("admin.list.delete_action"), rails_admin_delete_path(:model_name => @abstract_model.to_param, :id => object.id)) %></td>
        </tr>
        <% end %>
      </table>
      </div>
    </div>
    <% unless @xhr %>
    <div id="pagination">
      <p class="paginator">
      <% if @page_count.to_i > 1 %>
        <%= paginate(@current_page, @page_count, :url => params).html_safe %>
      <% end %>
      <%= @record_count %>
      <%= @model_config.abstract_model.model.model_name.human(:count => @record_count, :default => @record_count > 1 ? @model_config.list.label.downcase.pluralize : @model_config.list.label.downcase) %>
      <% if @page_count.to_i == 2 %>
        <%= link_to(t("admin.list.show_all"), params.merge(:all => true), :class => "showall") %>
      <% end %>
      </p>
    </div>
    <% end %>
