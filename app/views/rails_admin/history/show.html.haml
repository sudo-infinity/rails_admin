- params = request.params.except(:action, :controller, :model_name)
- query = params[:query]
- filter = params[:filter]
- sort = params[:sort]
- sort_reverse = params[:sort_reverse]

- head_javascript "rails_admin/application.js"
- head_style "rails_admin/list"

#block-tables.block
  .content
    %h2.title= @page_name
    .inner
      = render(:partial => 'layouts/rails_admin/flash', :locals => {:flash => flash})
      %table.table.grid
        %tr
          - property_name = "created_at"
          - selected = sort == property_name.to_s
          - sort_direction = selected ? (sort_reverse ? "ascending" : "descending") : nil
          %th{:class => "dateTime #{sort == property_name.to_s ? "selected" : nil}"}
            - sort_location = params.merge(:sort => :created_at).reject{|key, value| key.to_sym == :sort_reverse}.merge(selected && sort_reverse != "true" ? {:sort_reverse => "true"} : {})
            = link_to("DATE/TIME", sort_location, :class => sort_direction)
          - property_name = "username"
          - selected = sort == property_name.to_s
          - sort_direction = selected ? (sort_reverse ? "ascending" : "descending") : nil
          %th{:class => "smallString #{sort == property_name.to_s ? "selected" : nil}"}
            - sort_location = params.merge(:sort => property_name).reject{|key, value| key.to_sym == :sort_reverse}.merge(selected && sort_reverse != "true" ? {:sort_reverse => "true"} : {})
            = link_to("USER", sort_location, :class => sort_direction)
          - if @general
            - property_name = "item"
            - selected = sort == property_name.to_s
            - sort_direction = selected ? (sort_reverse ? "ascending" : "descending") : nil
            %th{:class => "int #{sort == property_name.to_s ? "selected" : nil}"}
              - sort_location = params.merge(:sort => property_name).reject{|key, value| key.to_sym == :sort_reverse}.merge(selected && sort_reverse != "true" ? {:sort_reverse => "true"} : {})
              = link_to("ITEM", sort_location, :class => sort_direction)
          - property_name = "message"
          - selected = sort == property_name.to_s
          - sort_direction = selected ? (sort_reverse ? "ascending" : "descending") : nil
          %th{:class => "smallString #{sort == property_name.to_s ? "selected" : nil}"}
            - sort_location = params.merge(:sort => property_name).reject{|key, value| key.to_sym == :sort_reverse}.merge(selected && sort_reverse != "true" ? {:sort_reverse => "true"} : {})
            = link_to("ACTION", sort_location, :class => sort_direction)
        - if @general
          %tfoot
            %tr
              %td{:colspan => "4"}
                .pagination
                  - if @page_count.to_i > 1
                    = paginate(@current_page, @page_count, :url => params.reject{|t| t == "page" || t=="all"}).html_safe
                  - if @page_count.to_i == 2
                    = link_to(t("admin.list.show_all"), params.reject{|t| t == "page"}.merge(:all => true), :class => "showall")
        %tbody
          - @history.each_with_index do |object, index|
            %tr{:class => index % 2 == 0 ? "odd" : "even"}
              %td.dateTime
                - unless object.created_at.nil?
                  = l(object.created_at, :format => :long, :default => l(object.created_at, :format => :long, :locale => :en))
              %td.smallString
                = object.username
              - if @general
                %td.int
                  - unless object.message.match("Destroy")
                    = link_to object.item, rails_admin_history_object_path(:id => object.item), :class => "historyLink"
                  - else
                    = object.item
              %td.smallString
                = object.message
                
      = form_tag("", :method => "get", :class => "search") do
        .columns.wat-cf
          .column.right
            %input#search.search_box{:name => "query", :type => "text", :value => query, :onblur => "if (!value) { value = '#{t("admin.list.search")}' }", :onfocus => "if (value == '#{t("admin.list.search")}') { value = '' }"}
            %input.search_submit{:type => "submit", :value => ""}
      .wat-cf